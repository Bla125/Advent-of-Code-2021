//DAY2P1 JOB 0,'ADVENT OF CODE',
//       MSGCLASS=A,MSGLEVEL=(1,1),
//       NOTIFY=&SYSUID
//ASMCLG EXEC PROC=ASMHCLG
//SYSIN  DD *
         PRINT ON,NODATA,NOGEN
********************************************
*        REGISTER EQUATES                  *
********************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
********************************************
DAY2P1   CSECT
         STM   R14,R12,12(R13)
         BASR  R12,0                ESTABLISH...
         USING *,R12                ADDRESSABILITY
         ST    R13,SAVEAREA+4       BACKWARD CHAIN CALLER
         LA    R13,SAVEAREA         ADDRESS OF MY SAVE AREA
********************************************
*        MAIN PROGRAM LOGIC                *
********************************************
         OPEN  (FILEIN,(INPUT))     OPEN FILEIN FOR INPUT
         OPEN  (FILEOUT,(OUTPUT))   OPEN FILEOUT FOR OUTPUT


READLOOP EQU   *
         GET   FILEIN,INREC         READ RECORD FROM FILEIN TO INREC
         CLC   =CL7'forward',INREC  IF INREC CONTAINS FORWARD
         BE    CALCFORW             BRANCH AND ADD NUM TO HORIZONTAL
         CLC   =CL4'down',INREC     IF INREC CONTAINS DOWN
         BE    CALCDOWN             BRANCH AND ADD NUM TO DEPTH
         CLC   =CL2'up',INREC       IF INREC CONTAINS UP
         BE    CALCUP               BRANCH AND SUBTRACT NUM FROM DEPTH
         B     READLOOP             REPEAT LOOP


CALCFORW EQU   *
         PACK  PACKNUM,FORWNUM      PACK NUMBER FROM INREC INTO PACKNUM
         AP    HORIZONTAL,PACKNUM   ADD PACKNUM TO HORIZONTAL
         B     READLOOP             BRANCH BACK TO READLOOP

CALCDOWN EQU   *
         PACK  PACKNUM,DOWNNUM      PACK NUMBER FROM INREC INTO PACKNUM
         AP    DEPTH,PACKNUM        ADD PACKNUM TO DEPTH
         B     READLOOP             BRANCH BACK TO READLOOP

CALCUP   EQU   *
         PACK  PACKNUM,UPNUM        PACK NUMBER FROM INREC INTO PACKNUM
         SP    DEPTH,PACKNUM        SUBTRACT PACKNUM FROM DEPTH
         B     READLOOP             BRANCH BACK TO READLOOP


EOF      EQU   *
         ZAP   ANSWER,HORIZONTAL    COPY HORIZONTAL NUMBER INTO ANSWER
         MP    ANSWER,DEPTH         MULTIPLY HORIZONTAL NUMBER BY DEPTH

         MVC   EDOUT,EDWD           MOVE EDIT WORD INTO EDIT OUTPUT
         ED    EDOUT,ANSWER         EDIT ANSWER INTO EDOUT FOR DISPLAY

         MVC   OUTREC,=CL80' '      FILL OUTREC WITH BLANKS
         MVC   OUTREC(L'EDOUT),EDOUT   MOVE EDOUT INTO OUTREC
         PUT   FILEOUT,OUTREC       WRITE OUTREC TO FILEOUT

         CLOSE (FILEIN)             CLOSE FILEIN
         CLOSE (FILEOUT)            CLOSE FILEOUT

         L     R13,SAVEAREA+4       POINT AT OLD SAVE AREA
         LM    R14,R12,12(R13)      RESTORE THE REGISTERS
         LA    R15,0                RETURN CODE = 0
         BR    R14                  RETURN TO THE OPERATING SYSTEM
********************************************
*        SYMBOL DECLARATIONS               *
********************************************
HORIZONTAL DC  PL5'0'
DEPTH    DC    PL5'0'
ANSWER   DC    PL8'0'
PACKNUM  DC    PL1'0'
EDWD     DC    X'202020202020202020202020202020'
EDOUT    DS    XL15
********************************************
*        INPUT FILE - DATA CONTROL BLOCK   *
********************************************
FILEIN   DCB   DDNAME=FILEIN,                                          X
               MACRF=(GM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOF

********************************************
*        INPUT RECORD AREA                 *
********************************************
INREC    DS    CL80           FORMAT OF THE INPUT RECORD
         ORG   INREC
FORWORD  DS    CL7                  FORWARD WORD
         ORG   INREC+8
FORWNUM  DS    CL1                  FORWARD NUMBER
         ORG   INREC
DOWN     DS    CL4                  DOWN WORD
         ORG   INREC+5
DOWNNUM  DS    CL1                  DOWN NUMBER
         ORG   INREC
UP       DS    CL2                  UP WORD
         ORG   INREC+3
UPNUM    DS    CL1                  UP NUMBER
         ORG   ,

********************************************
*        OUTPUT FILE - DATA CONTROL BLOCK  *
********************************************
FILEOUT  DCB   DDNAME=FILEOUT,                                         X
               MACRF=(PM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80

********************************************
*        OUTPUT RECORD AREA                *
********************************************
OUTREC   DS    CL80

********************************************
*        REGISTER SAVE AREA                *
********************************************
SAVEAREA DS    18F

********************************************
*        LITERAL POOL                      *
********************************************
         LTORG *

********************************************
*        END OF PROGRAM                    *
********************************************
         END   DAY2P1
/*
//G.SYSUDUMP   DD SYSOUT=*
//G.FILEIN     DD DSN=Z00620.ADVINPUT(DAY2IN),DISP=SHR
//G.FILEOUT    DD DSN=Z00620.ADVASM(OUTPUT),DISP=SHR
